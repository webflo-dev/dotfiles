let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/.config/nvim
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +18 lua/_lazy.lua
badd +10 lua/essentials/null-ls.lua
badd +13 lua/essentials/lsp/init.lua
badd +32 lua/utils.lua
badd +10 lua/plugins/copilot.lua
badd +26 lua/essentials/treesitter.lua
badd +312 lua/plugins/heirline.lua
badd +111 ~/.local/share/nvim/lazy/tokyonight.nvim/lua/tokyonight/colors.lua
badd +82 lua/plugins/misc.lua
badd +1 lua/plugins/no-neck-pain.lua__
badd +32 lua/essentials/colorscheme.lua
badd +83 lua/essentials/cmp.lua
badd +43 lua/essentials/lsp_servers/vtsls.lua
badd +108 lua/config/autocmds.lua
badd +14 lua/config/filetypes.lua
badd +168 lua/config/keymaps.lua
badd +3 lua/plugins/colorizer.lua
badd +5 lua/plugins/motion.lua
badd +10 lua/plugins/sessions.lua
badd +15 lua/plugins/lsp-fidget.lua
badd +39 lua/essentials/git.lua
badd +15 lua/essentials/lsp/diagnostics.lua
badd +7 lua/essentials/lsp/handlers.lua
badd +28 lua/essentials/lsp/autocmds.lua
badd +9 lua/essentials/lsp/formatting.lua
badd +13 ~/.local/share/nvim/lazy/lsp-inlayhints.nvim/lua/lsp-inlayhints/init.lua
badd +1 lua/essentials/lsp_attach/copilot.lua
badd +1 lua/essentials/lsp_attach/lsp-inlayhints.lua
badd +63 lua/commands.lua
badd +8 lua/essentials/lsp_servers/eslint.lua
badd +6 lua/essentials/lsp_servers/tsserver.lua
badd +2 lua/env.lua
badd +6 lua/plugins/tsc.lua
badd +14 lua/plugins/notify.lua
badd +12 lua/essentials/trouble.lua
badd +98 lua/essentials/telescope.lua
badd +26 lua/config/options.lua
badd +16 init.lua
badd +46 lua/essentials/lsp/keymaps.lua
badd +1 lua/plugins/harpoon.lua
badd +15 lua/plugins/files.lua
badd +4 lua/plugins/tabulous.lua
badd +1 oil:///home/florent/.config/nvim/
badd +1 3
badd +29 lua/plugins/database.lua
argglobal
%argdel
$argadd oil:///home/florent/.config/nvim/
edit lua/essentials/cmp.lua
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 208 + 209) / 418)
exe 'vert 2resize ' . ((&columns * 209 + 209) / 418)
argglobal
balt lua/plugins/database.lua
let s:l = 83 - ((34 * winheight(0) + 41) / 83)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 83
normal! 038|
wincmd w
argglobal
if bufexists(fnamemodify("lua/plugins/database.lua", ":p")) | buffer lua/plugins/database.lua | else | edit lua/plugins/database.lua | endif
if &buftype ==# 'terminal'
  silent file lua/plugins/database.lua
endif
balt lua/essentials/cmp.lua
let s:l = 29 - ((28 * winheight(0) + 41) / 83)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 29
normal! 06|
wincmd w
2wincmd w
exe 'vert 1resize ' . ((&columns * 208 + 209) / 418)
exe 'vert 2resize ' . ((&columns * 209 + 209) / 418)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
